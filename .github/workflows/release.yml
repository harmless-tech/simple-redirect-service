name: Build and push release

on:
  push:
    tags:
      - "v**"
  workflow_dispatch:

jobs:
  build:
    if: ${{ github.event_name != 'pull_request' }}
    strategy:
      matrix:
        include:
          - target: aarch64
            docker: arm64
          - target: x86_64
            docker: amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build.Dockerfile
          pull: true
          push: false
          load: true
          tags: srs:dev
          platforms: linux/${{ matrix.docker }}
          builder: ${{ steps.buildx.outputs.name }}
      - name: Extract binary
        run: docker run --rm --platform=linux/${{ matrix.docker }} --mount type=bind,source=$(pwd),target=/pkg-repo --pull=never --entrypoint /bin/sh srs:dev -c "cp /app/bin/simple-redirect-service /pkg-repo"
      - name: Tar
        run: tar -czvf ${{ matrix.target }}-unknown-linux-musl.tar.gz simple-redirect-service
      - name: Hash
        run: sha256sum ${{ matrix.target }}-unknown-linux-musl.tar.gz >> ${{ matrix.target }}-unknown-linux-musl.sha256
      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-unknown-linux-musl
          path: |
            ${{ matrix.target }}-unknown-linux-musl.tar.gz
            ${{ matrix.target }}-unknown-linux-musl.sha256
      - name: Release Artifact
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: simple-redirect-service-${{ github.ref_name }}
          makeLatest: true
          allowUpdates: true
          artifacts: "*-unknown-linux-musl*"

  build-docker:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          tags: ghcr.io/harmless-tech/simple-redirect-service:latest,ghcr.io/harmless-tech/simple-redirect-service:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
